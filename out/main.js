// Generated by CoffeeScript 1.8.0
(function() {
  var clean_response, error_message_el, load_feed, mock_card, render_cards, render_comments, render_likes, render_single_card;

  load_feed = function() {
    return $.ajax('https://api.instagram.com/v1/media/popular?access_token=435677321.03fd3ce.41289f7b8ed14d9180438b99f8e38b77', {
      type: 'GET',
      dataType: 'jsonp',
      jsonpCallback: 'callback',
      error: function(jqXHR, textStatus, errorThrown) {
        return $('body').append(error_message_el("Couldn't contact the server. AJAX Error: " + textStatus));
      },
      success: function(data, textStatus, jqXHR) {
        var feed, formatted_data;
        feed = document.getElementById('instafeed');
        formatted_data = clean_response(data);
        feed.innerHTML = render_cards(formatted_data);
        return console.log(data);
      }
    });
  };

  error_message_el = function(message) {
    return $("<div class='error-message'>" + message + "</div>");
  };

  clean_response = function(data) {
    var card_hash, card_objects, post, _i, _len, _ref;
    card_objects = [];
    _ref = data.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      post = _ref[_i];
      card_hash = {};
      card_hash['img_url'] = post.images.standard_resolution.url;
      card_hash['post_url'] = post.link;
      if (post.caption != null) {
        card_hash['text'] = post.caption.text;
      }
      if (post.comments.count > 0) {
        card_hash['comments'] = post.comments;
      }
      if (post.likes.count > 0) {
        card_hash['likes'] = post.likes;
      }
      card_objects.push(card_hash);
    }
    return card_objects;
  };

  render_cards = function(card_array, target_div) {
    var card, html, _i, _len;
    html = "";
    for (_i = 0, _len = card_array.length; _i < _len; _i++) {
      card = card_array[_i];
      html += render_single_card(card);
    }
    html = "<div class= cardbar>" + html + "</div>";
    return html;
  };

  render_single_card = function(card) {
    var card_template, comments_box, content, img, likes_bar;
    card_template = "";
    img = "<div class= 'image'>" + "<img class='instagram-image' src=" + card.img_url + "></div>";
    content = "";
    if (card.likes != null) {
      content = render_likes(card.likes);
    } else {
      content = "<div class= 'user-list'>No one likes you</div>";
    }
    likes_bar = "<div class='likes'><div class='heart'> &nbsp </div>" + content + "</div>";
    console.log(card);
    if (card.comments != null) {
      content = render_comments(card.comments.data);
    } else {
      content = "<div class= 'no-friends'> No one found you interesting enough to talk to. </div>";
    }
    comments_box = "<div class= 'comments'>" + content + "<input class= 'words' type='text' placeholder='Write a comment...'></div>";
    card_template = "<div class= 'card'>" + img + likes_bar + comments_box + "</div>";
    card_template = card_template + "<br><br>";
    return card_template;
  };

  render_comments = function(comments) {
    var comment, comment_html, comment_text, _i, _len;
    comment_html = "";
    for (_i = 0, _len = comments.length; _i < _len; _i++) {
      comment = comments[_i];
      comment_text = comment.text.replace(/@\w+/g, function(match) {
        return "<a href='https://instagram.com/" + (match.substr(1, match.length)) + "' class='highlighted-text'>" + match + "</a>";
      });
      comment_html += "<div class= 'single-comment'><img class= 'profile-pic' src='" + comment.from.profile_picture + "'>" + ("<div class='comment-text'><a href='https://instagram.com/" + comment.from.username + "' class='highlighted-text-commenter'>") + comment.from.username + "</a>" + comment_text + "</div></div>";
    }
    console.log(comment_html);
    return comment_html;
  };

  render_likes = function(likes) {
    var addendum, head, last_few, like, remaining, tail, usernames, _i, _len, _ref;
    usernames = "";
    addendum = "";
    if (likes.data.length > 3) {
      remaining = likes.count - 3;
      last_few = likes.data.slice(Math.max(remaining, 1));
      addendum = "and " + remaining + " others like this.";
    } else {
      console.log(likes);
      last_few = likes.data;
      if (last_few.length === 1) {
        addendum = " likes this.";
      } else {
        addendum = " like this.";
      }
    }
    _ref = likes.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      like = _ref[_i];
      tail = "";
      head = "";
      if (like === likes.data[likes.data.length - 1] || likes.data.length === 0) {
        if (likes.data.length > 3) {
          tail = " ";
        } else if (likes.data.length > 1) {
          head = " and ";
        }
      } else {
        if (likes.data.length < 4 && like === likes.data[likes.data.length - 2]) {
          tail = "";
        } else {
          tail = ", ";
        }
      }
      usernames += head + ("<a href='https://instagram.com/" + like.username + "' class='highlighted-text'>") + like.username + "</a>" + tail;
    }
    usernames = usernames + addendum;
    return usernames;
  };

  mock_card = function(image_url, username_hash_array, comment_hash_array) {
    var card, comment, mock_comment, mock_user, user, _i, _j, _len, _len1;
    if (image_url == null) {
      image_url = null;
    }
    if (username_hash_array == null) {
      username_hash_array = {};
    }
    if (comment_hash_array == null) {
      comment_hash_array = {};
    }
    card = {};
    if (image_url != null) {
      card['img_url'] = image_url;
    } else {
      card['img_url'] = "http://i.imgur.com/DQpmnp6.png";
    }
    if (username_hash_array.length > 0) {
      card['likes'] = {};
      card.likes['count'] = username_hash_array.length;
      card.likes['data'] = [];
      for (_i = 0, _len = username_hash_array.length; _i < _len; _i++) {
        user = username_hash_array[_i];
        mock_user = {};
        mock_user['username'] = user.username;
        card.likes.data.push(mock_user);
      }
    }
    if (comment_hash_array.length > 0) {
      card['comments'] = {};
      card.comments['data'] = [];
      for (_j = 0, _len1 = comment_hash_array.length; _j < _len1; _j++) {
        comment = comment_hash_array[_j];
        mock_comment = {};
        mock_comment['from'] = {};
        mock_comment.from['username'] = comment.username;
        mock_comment['text'] = comment.text;
        mock_comment.from['profile_picture'] = "http://www.phootoscelebrities.com/wp-content/uploads/2014/07/arnold-schwarzenegger-smile-photos.jpg";
        card.comments.data.push(mock_comment);
      }
    }
    return card;
  };

  load_feed();

}).call(this);
